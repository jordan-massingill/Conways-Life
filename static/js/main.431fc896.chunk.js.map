{"version":3,"sources":["components/LifeCanvas.js","components/Rules.js","components/Welcome.js","components/About.js","App.js","index.js"],"names":["Cell","living","xcoord","ycoord","_this","this","Object","classCallCheck","toggle","x","y","arr","i","j","k","LifeCanvas","props","_this2","possibleConstructorReturn","getPrototypeOf","call","sample1","rows","height","cellsize","cols","width","midX","Math","floor","midY","clearGrid","mirrorCells","state","cells","draw","sample2","sample3","stepBy1Gen","continueAnimation","update","nextgen","ctx","refs","canvas","getContext","moveTo","lineTo","strokeStyle","stroke","forEach","cellRow","cell","setState","generation","randomize","num","round","random","prevState","color","toString","fillStyle","fillRect","Array","fill","map","row","liveneighbors","animate","setTimeout","tick","interval","requestAnimationFrame","start","e","stop","clickListener","canv","lft","offsetLeft","top","offsetTop","pageX","pageY","xindex","yindex","console","log","slow","med","fast","dropdownOpen","react_default","a","createElement","ref","onClick","Link","to","Component","Rules","Welcome","About","href","App","className","Route","exact","path","component","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById"],"mappings":"8KAsBA,8GAlBMA,EACJ,SAAAA,EAAYC,EAAQC,EAAQC,GAAQ,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAL,GAAAK,KAKpCG,OAAS,WACY,GAAfJ,EAAKH,OACPG,EAAKH,OAAS,EAEdG,EAAKH,OAAS,GARhBI,KAAKJ,OAASA,EACdI,KAAKI,EAAIP,EACTG,KAAKK,EAAIP,GAaTQ,EAAM,GACDC,EAAE,EAAGA,EAHD,GAGSA,IACpBD,EAAIC,GAAK,GAEX,IAAK,IAAIC,EAAE,EAAGA,EAND,GAMSA,IACpB,IAAK,IAAIC,EAAE,EAAGA,EANH,GAMWA,IACpBH,EAAIE,GAAGC,GAAK,IAAId,EAAK,EAAG,GAAGa,EAAG,GAAGC,OAIhBC,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAX,OAAAC,EAAA,EAAAD,CAAAD,KAAAU,IACjBE,EAAAX,OAAAY,EAAA,EAAAZ,CAAAD,KAAAC,OAAAa,EAAA,EAAAb,CAAAS,GAAAK,KAAAf,KAAMW,KAgBRK,QAAU,WACR,IAAMC,EAAOL,EAAKM,OAAON,EAAKO,SACxBC,EAAOR,EAAKS,MAAMT,EAAKO,SACvBG,EAAOC,KAAKC,MAAMP,EAAK,GACvBQ,EAAOF,KAAKC,MAAMJ,EAAK,GAC7BR,EAAKc,YACL,IAAMC,EAAcf,EAAKgB,MAAMC,MAC/BF,EAAYL,GAAMG,GAAMtB,SACxBwB,EAAYL,EAAK,GAAGG,GAAMtB,SAC1BwB,EAAYL,GAAMG,EAAK,GAAGtB,SAC1BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAE5BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAE9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAE9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAE9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BwB,EAAYL,EAAK,IAAIG,EAAK,IAAItB,SAC9BS,EAAKkB,QApEYlB,EAuEnBmB,QAAU,WACR,IAAMd,EAAOL,EAAKM,OAAON,EAAKO,SACxBC,EAAOR,EAAKS,MAAMT,EAAKO,SACvBG,EAAOC,KAAKC,MAAMP,EAAK,GACvBQ,EAAOF,KAAKC,MAAMJ,EAAK,GAC7BR,EAAKc,YACL,IAAMC,EAAcf,EAAKgB,MAAMC,MAC/BF,EAAYL,GAAMG,GAAMtB,SACxBwB,EAAYL,GAAMG,EAAK,GAAGtB,SAC1BwB,EAAYL,GAAMG,EAAK,GAAGtB,SAC1BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAE5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAE5BwB,EAAYL,EAAK,GAAGG,GAAMtB,SAC1BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAE5BwB,EAAYL,GAAMG,EAAK,GAAGtB,SAC1BwB,EAAYL,GAAMG,EAAK,GAAGtB,SAC1BwB,EAAYL,GAAMG,EAAK,GAAGtB,SAC1BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BS,EAAKkB,QArGYlB,EAwGnBoB,QAAU,WACR,IAAMf,EAAOL,EAAKM,OAAON,EAAKO,SACxBC,EAAOR,EAAKS,MAAMT,EAAKO,SACvBG,EAAOC,KAAKC,MAAMP,EAAK,GACvBQ,EAAOF,KAAKC,MAAMJ,EAAK,GAC7BR,EAAKc,YACL,IAAMC,EAAcf,EAAKgB,MAAMC,MAC/BF,EAAYL,GAAMG,GAAMtB,SACxBwB,EAAYL,GAAMG,EAAK,GAAGtB,SAC1BwB,EAAYL,GAAMG,EAAK,GAAGtB,SAC1BwB,EAAYL,GAAMG,EAAK,GAAGtB,SAC1BwB,EAAYL,GAAMG,EAAK,GAAGtB,SAC1BwB,EAAYL,GAAMG,EAAK,GAAGtB,SAC1BwB,EAAYL,GAAMG,EAAK,GAAGtB,SAC1BwB,EAAYL,GAAMG,EAAK,GAAGtB,SAC1BwB,EAAYL,GAAMG,EAAK,GAAGtB,SAC1BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BwB,EAAYL,EAAK,GAAGG,EAAK,GAAGtB,SAC5BS,EAAKkB,QA5HYlB,EA+HnBqB,WAAa,WACPrB,EAAKgB,MAAMM,oBAGftB,EAAKuB,SACLvB,EAAKkB,OACLlB,EAAKwB,YArIYxB,EAwInBc,UAAY,WAGV,IAFA,IACMW,EADOzB,EAAK0B,KAAKC,OACNC,WAAW,MACnBpC,EAAI,EAAGA,EAAIQ,EAAKS,MAAOjB,GAAGQ,EAAKO,SACtCkB,EAAII,OAAOrC,EAAG,GACdiC,EAAIK,OAAOtC,EAAGQ,EAAKM,QAGrB,IAAK,IAAIb,EAAI,EAAGA,EAAEO,EAAKM,OAAQb,GAAGO,EAAKO,SACrCkB,EAAII,OAAO,EAAGpC,GACdgC,EAAIK,OAAO9B,EAAKS,MAAOhB,GAEzBgC,EAAIM,YAAc,QAClBN,EAAIO,SACJ,IAAIf,EAAQjB,EAAKgB,MAAMC,MACvBA,EAAMgB,QAAQ,SAAAC,GACZA,EAAQD,QAAQ,SAAAE,GACdA,EAAKnD,OAAS,MAGlBgB,EAAKoC,SAAS,CAAEnB,QAAOoB,WAAY,EAAGf,mBAAmB,IACzDtB,EAAKkB,QA7JYlB,EAgKnBsC,UAAY,WACV,IAAIrB,EAAQjB,EAAKgB,MAAMC,MACvBA,EAAMgB,QAAQ,SAAAC,GACZA,EAAQD,QAAQ,SAAAE,GACd,IAAMI,EAAM5B,KAAK6B,MAAM7B,KAAK8B,UAC5BN,EAAKnD,OAASuD,MAGlBvC,EAAKoC,SAAS,CAAEnB,QAAOoB,WAAY,EAAGf,mBAAmB,IACzDtB,EAAKkB,QAzKYlB,EA4KnBwB,QAAU,WACRxB,EAAKoC,SAAS,SAAAM,GAAS,MAAK,CAAEL,WAAYK,EAAUL,WAAW,MA7K9CrC,EAgLnBkB,KAAO,WAKL,IAJA,IACMO,EADOzB,EAAK0B,KAAKC,OACNC,WAAW,MACtBe,EAAQ,KAAmB,SAAdhC,KAAK8B,UAAmB,GAAGG,SAAS,IAE9ChD,EAAE,EAAGA,EAAEI,EAAKM,OAAON,EAAKO,SAAUX,IACzC,IAAK,IAAIC,EAAE,EAAGA,EAAEG,EAAKS,MAAMT,EAAKO,SAAUV,IACH,GAAjCG,EAAKgB,MAAMC,MAAMrB,GAAGC,GAAGb,QACzByC,EAAIoB,UAAYF,EAChBlB,EAAIqB,SAASlD,EAAEI,EAAKO,SAAUV,EAAEG,EAAKO,SAAUP,EAAKO,SAAS,EAAGP,EAAKO,SAAS,KAG9EkB,EAAIoB,UAAY,YAChBpB,EAAIqB,SAASlD,EAAEI,EAAKO,SAAUV,EAAEG,EAAKO,SAAUP,EAAKO,SAAS,EAAGP,EAAKO,SAAS,KA7LnEP,EAmMnBuB,OAAS,WAKP,IAJA,IAAMlB,EAAOL,EAAKM,OAAON,EAAKO,SACxBC,EAAOR,EAAKS,MAAMT,EAAKO,SACvBQ,EAAc,IAAIgC,MAAM1C,GAAM2C,KAAK,GAAGC,IAAI,SAAAC,GAAG,OAAI,IAAIH,MAAMvC,GAAMwC,KAAK,KAEnExD,EAAE,EAAGA,EAAEa,EAAMb,IACpB,IAAK,IAAIC,EAAE,EAAGA,EAAEe,EAAMf,IACpBsB,EAAYvB,GAAGC,GAAK,IAAIV,EAAK,EAAGS,EAAEQ,EAAKS,MAAOhB,EAAEO,EAAKM,QAIzD,IAAK,IAAIV,EAAE,EAAGA,EAAEI,EAAKM,OAAON,EAAKO,SAAUX,IACzC,IAAK,IAAIC,EAAE,EAAGA,EAAEG,EAAKS,MAAMT,EAAKO,SAAUV,IAAK,CAC7C,IAAIsD,EAAgB,EAmCpB,GAlCIvD,EAAI,IACFC,EAAE,IACJsD,GAAiBnD,EAAKgB,MAAMC,MAAMrB,EAAE,GAAGC,EAAE,GAAGb,QAG1Ca,EAAEG,EAAKS,MAAMT,EAAKO,SAAS,IAC7B4C,GAAiBnD,EAAKgB,MAAMC,MAAMrB,EAAE,GAAGC,EAAE,GAAGb,QAG9CmE,GAAiBnD,EAAKgB,MAAMC,MAAMrB,EAAE,GAAGC,GAAGb,QAGxCa,EAAI,IAEFD,EAAEI,EAAKM,OAAON,EAAKO,SAAS,IAC9B4C,GAAiBnD,EAAKgB,MAAMC,MAAMrB,EAAE,GAAGC,EAAE,GAAGb,QAE9CmE,GAAiBnD,EAAKgB,MAAMC,MAAMrB,GAAGC,EAAE,GAAGb,QAGxCY,EAAEI,EAAKM,OAAON,EAAKO,SAAS,IAC1BV,EAAEG,EAAKS,MAAMT,EAAKO,SAAS,IAC7B4C,GAAiBnD,EAAKgB,MAAMC,MAAMrB,EAAE,GAAGC,EAAE,GAAGb,QAE9CmE,GAAiBnD,EAAKgB,MAAMC,MAAMrB,EAAE,GAAGC,GAAGb,QAGxCa,EAAEG,EAAKS,MAAMT,EAAKO,SAAS,IAC7B4C,GAAiBnD,EAAKgB,MAAMC,MAAMrB,GAAGC,EAAE,GAAGb,QAGP,GAAjCgB,EAAKgB,MAAMC,MAAMrB,GAAGC,GAAGb,QAAiC,IAAlBmE,GACpCpC,EAAYnB,GAAGC,GAAGN,SAEa,GAAjCS,EAAKgB,MAAMC,MAAMrB,GAAGC,GAAGb,OACzB,OAAQmE,GACN,KAAK,EACL,KAAK,EACHpC,EAAYnB,GAAGC,GAAGN,UAS5BS,EAAKoC,SAAS,CAAEnB,MAAOF,KAhQNf,EAmQnBoD,QAAU,WACRC,WAAWrD,EAAKsD,KAAMtD,EAAKgB,MAAMuC,WApQhBvD,EAuQnBsD,KAAO,WACDtD,EAAKgB,MAAMM,oBACbtB,EAAKkB,OACLlB,EAAKuB,SACLvB,EAAKwB,UACLgC,sBAAsBxD,EAAKoD,WA5QZpD,EAgRnByD,MAAQ,SAACC,GACH1D,EAAKgB,MAAMM,oBAGftB,EAAKoC,SAAS,CAAEd,mBAAmB,IACnCkC,sBAAsBxD,EAAKsD,QArRVtD,EAwRnB2D,KAAO,SAACD,GACN1D,EAAKoC,SAAS,CAAEd,mBAAmB,KAzRlBtB,EA4RnB4D,cAAgB,SAACF,GACf,IAAqC,IAAjC1D,EAAKgB,MAAMM,kBAAf,CAGA,IAAMuC,EAAO7D,EAAK0B,KAAKC,OACjBF,EAAMoC,EAAKjC,WAAW,MACtBkC,EAAMD,EAAKE,WACXC,EAAMH,EAAKI,UACbhD,EAAQjB,EAAKgB,MAAMC,MACjBzB,EAAIkE,EAAEQ,MAAQJ,EACdrE,EAAIiE,EAAES,MAAQH,EACdI,EAASzD,KAAKC,MAAMpB,EAAEQ,EAAKO,UAC3B8D,EAAS1D,KAAKC,MAAMnB,EAAEO,EAAKO,UACjC+D,QAAQC,IAAIH,EAAQC,GACpBpD,EAAMmD,GAAQC,GAAQ9E,SAEtBkC,EAAIoB,UAAY5B,EAAMmD,GAAQC,GAAQrF,OAAS,QAAU,OACzDyC,EAAIqB,SAASsB,EAAOpE,EAAKO,SAAU8D,EAAOrE,EAAKO,SAAUP,EAAKO,SAAS,EAAGP,EAAKO,SAAS,GACxFP,EAAKoC,SAAS,CAAEnB,YA5ShBjB,EAAKwE,KAAO,IACZxE,EAAKyE,IAAM,IACXzE,EAAK0E,KAAO,GACZ1E,EAAKO,SAAW,GAChBP,EAAKM,OAAS,IACdN,EAAKS,MAAQ,IACbT,EAAKgB,MAAQ,CACXuC,SAAU,IACVjC,mBAAmB,EACnBL,MAAOvB,EACP2C,WAAY,EACZsC,cAAc,GAbC3E,mFAoTjB,IAFA,IACMyB,EADOrC,KAAKsC,KAAKC,OACNC,WAAW,MACnBpC,EAAI,EAAGA,EAAIJ,KAAKqB,MAAOjB,GAAGJ,KAAKmB,SACtCkB,EAAII,OAAOrC,EAAG,GACdiC,EAAIK,OAAOtC,EAAGJ,KAAKkB,QAGrB,IAAK,IAAIb,EAAI,EAAGA,EAAEL,KAAKkB,OAAQb,GAAGL,KAAKmB,SACrCkB,EAAII,OAAO,EAAGpC,GACdgC,EAAIK,OAAO1C,KAAKqB,MAAOhB,GAEzBgC,EAAIM,YAAc,QAClBN,EAAIO,SACJ5C,KAAK8B,OACLsC,sBAAsBpE,KAAKkE,uCAIvB,OACEsB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,yBAAiB1F,KAAK4B,MAAMqB,YAC5BuC,EAAAC,EAAAC,cAAA,UAAQC,IAAI,SAAStE,MAAOrB,KAAKqB,MAAOH,OAAQlB,KAAKkB,OAAQ0E,QAAW5F,KAAKwE,gBAH/E,IAGiGgB,EAAAC,EAAAC,cAAA,WAC/FF,EAAAC,EAAAC,cAAA,UAAQE,QAAW5F,KAAKqE,OAAxB,SACAmB,EAAAC,EAAAC,cAAA,UAAQE,QAAW5F,KAAKuE,MAAxB,QACAiB,EAAAC,EAAAC,cAAA,UAAQE,QAAW5F,KAAKkD,WAAxB,aACAsC,EAAAC,EAAAC,cAAA,UAAQE,QAAW5F,KAAK0B,WAAxB,SACA8D,EAAAC,EAAAC,cAAA,UAAQE,QAAW5F,KAAKiC,YAAxB,mBACAuD,EAAAC,EAAAC,cAAA,UAAQE,QAAW5F,KAAKgB,SAAxB,YACAwE,EAAAC,EAAAC,cAAA,UAAQE,QAAW5F,KAAK+B,SAAxB,YACAyD,EAAAC,EAAAC,cAAA,UAAQE,QAAW5F,KAAKgC,SAAxB,YAAkDwD,EAAAC,EAAAC,cAAA,WAClDF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,UAASN,EAAAC,EAAAC,cAAA,oCAClBF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,UAASN,EAAAC,EAAAC,cAAA,8CAnVUK,aC5BzB,SAASC,EAAMrF,GAC5B,OACE6E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,uMAGAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iGAA4FF,EAAAC,EAAAC,cAAA,WAC5FF,EAAAC,EAAAC,cAAA,4GACGF,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,eAAcN,EAAAC,EAAAC,cAAA,kCACvBF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,UAASN,EAAAC,EAAAC,cAAA,kCCZT,SAASO,EAAQtF,GAC9B,OACE6E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,eAAcN,EAAAC,EAAAC,cAAA,kCACvBF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,UAASN,EAAAC,EAAAC,cAAA,oCAClBF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,UAASN,EAAAC,EAAAC,cAAA,kCCNT,SAASQ,EAAMvF,GAC5B,OACE6E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,sJAIAF,EAAAC,EAAAC,cAAA,2GAEqBF,EAAAC,EAAAC,cAAA,KAAGS,KAAK,qDAAR,mBAFrB,4MAOAX,EAAAC,EAAAC,cAAA,4KAIAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,eAAcN,EAAAC,EAAAC,cAAA,kCACvBF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,UAASN,EAAAC,EAAAC,cAAA,yCCMTU,mLAXX,OACEZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OACbb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,IAAIC,UAAWR,IACnCT,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOE,KAAO,SAASC,UAAWT,IAClCR,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOE,KAAO,SAASC,UAAWP,IAClCV,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOE,KAAO,cAAcC,UAAW/F,YAd7BqF,qBCFlBW,IAASC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KAAQpB,EAAAC,EAAAC,cAACmB,EAAD,OAAkBC,SAASC,eAAe","file":"static/js/main.431fc896.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass Cell {  /* boolean   int     int     int */\n  constructor(living, xcoord, ycoord) {\n    this.living = living;\n    this.x = xcoord;\n    this.y = ycoord;\n  }\n  toggle = () => {\n    if (this.living == 0) {\n      this.living = 1;\n    } else {\n      this.living = 0;\n    }\n  }\n}\n\nconst rows = 50;\nconst cols = 50;\nlet arr = [];\nfor (let i=0; i<rows; i++) {\n  arr[i] = [];\n}\nfor (let j=0; j<rows; j++) {\n  for (let k=0; k<cols; k++) {\n    arr[j][k] = new Cell(0, 10*j, 10*k);\n  }\n}\n\nexport default class LifeCanvas extends Component {\n  constructor(props) {\n    super(props);\n    this.slow = 600;\n    this.med = 300;\n    this.fast = 50;\n    this.cellsize = 10;\n    this.height = 500;\n    this.width = 500;\n    this.state = {\n      interval: 500,\n      continueAnimation: false,\n      cells: arr,\n      generation: 0,\n      dropdownOpen: false\n    }\n  }\n\n  sample1 = () => {\n    const rows = this.height/this.cellsize;\n    const cols = this.width/this.cellsize;\n    const midX = Math.floor(rows/2);\n    const midY = Math.floor(cols/2);\n    this.clearGrid();\n    const mirrorCells = this.state.cells;\n    mirrorCells[midX][midY].toggle();\n    mirrorCells[midX+1][midY].toggle();\n    mirrorCells[midX][midY+1].toggle();\n    mirrorCells[midX+1][midY+1].toggle();\n    mirrorCells[midX+2][midY+2].toggle();\n    mirrorCells[midX+3][midY+2].toggle();\n    mirrorCells[midX+2][midY+3].toggle();\n    mirrorCells[midX+3][midY+3].toggle();\n\n    mirrorCells[midX-15][midY+15].toggle();\n    mirrorCells[midX-14][midY+15].toggle();\n    mirrorCells[midX-15][midY+16].toggle();\n    mirrorCells[midX-14][midY+16].toggle();\n    mirrorCells[midX-13][midY+17].toggle();\n    mirrorCells[midX-12][midY+17].toggle();\n    mirrorCells[midX-13][midY+18].toggle();\n    mirrorCells[midX-12][midY+18].toggle();\n\n    mirrorCells[midX-15][midY-15].toggle();\n    mirrorCells[midX-14][midY-15].toggle();\n    mirrorCells[midX-15][midY-14].toggle();\n    mirrorCells[midX-14][midY-14].toggle();\n    mirrorCells[midX-13][midY-13].toggle();\n    mirrorCells[midX-12][midY-13].toggle();\n    mirrorCells[midX-13][midY-12].toggle();\n    mirrorCells[midX-12][midY-12].toggle();\n\n    mirrorCells[midX+15][midY+15].toggle();\n    mirrorCells[midX+16][midY+15].toggle();\n    mirrorCells[midX+15][midY+16].toggle();\n    mirrorCells[midX+16][midY+16].toggle();\n    mirrorCells[midX+17][midY+17].toggle();\n    mirrorCells[midX+18][midY+17].toggle();\n    mirrorCells[midX+17][midY+18].toggle();\n    mirrorCells[midX+18][midY+18].toggle();\n\n    mirrorCells[midX+15][midY-15].toggle();\n    mirrorCells[midX+16][midY-15].toggle();\n    mirrorCells[midX+15][midY-14].toggle();\n    mirrorCells[midX+16][midY-14].toggle();\n    mirrorCells[midX+17][midY-13].toggle();\n    mirrorCells[midX+18][midY-13].toggle();\n    mirrorCells[midX+17][midY-12].toggle();\n    mirrorCells[midX+18][midY-12].toggle();\n    this.draw();\n  }\n\n  sample2 = () => {\n    const rows = this.height/this.cellsize;\n    const cols = this.width/this.cellsize;\n    const midX = Math.floor(rows/2);\n    const midY = Math.floor(cols/2);\n    this.clearGrid();\n    const mirrorCells = this.state.cells;\n    mirrorCells[midX][midY].toggle();\n    mirrorCells[midX][midY+1].toggle();\n    mirrorCells[midX][midY+2].toggle();\n    mirrorCells[midX-1][midY+2].toggle();\n    mirrorCells[midX-2][midY+1].toggle();\n\n    mirrorCells[midX-5][midY-5].toggle();\n    mirrorCells[midX-5][midY-4].toggle();\n    mirrorCells[midX-5][midY-3].toggle();\n    mirrorCells[midX-6][midY-3].toggle();\n    mirrorCells[midX-7][midY-4].toggle();\n\n    mirrorCells[midX-5][midY].toggle();\n    mirrorCells[midX-5][midY+1].toggle();\n    mirrorCells[midX-5][midY+2].toggle();\n    mirrorCells[midX-6][midY+2].toggle();\n    mirrorCells[midX-7][midY+1].toggle();\n\n    mirrorCells[midX][midY-5].toggle();\n    mirrorCells[midX][midY-4].toggle();\n    mirrorCells[midX][midY-3].toggle();\n    mirrorCells[midX-1][midY-3].toggle();\n    mirrorCells[midX-2][midY-4].toggle();\n    this.draw();\n  }\n\n  sample3 = () => {\n    const rows = this.height/this.cellsize;\n    const cols = this.width/this.cellsize;\n    const midX = Math.floor(rows/2);\n    const midY = Math.floor(cols/2);\n    this.clearGrid();\n    const mirrorCells = this.state.cells;\n    mirrorCells[midX][midY].toggle();\n    mirrorCells[midX][midY+1].toggle();\n    mirrorCells[midX][midY+2].toggle();\n    mirrorCells[midX][midY+4].toggle();\n    mirrorCells[midX][midY+5].toggle();\n    mirrorCells[midX][midY-1].toggle();\n    mirrorCells[midX][midY-2].toggle();\n    mirrorCells[midX][midY-4].toggle();\n    mirrorCells[midX][midY-5].toggle();\n    mirrorCells[midX+1][midY+3].toggle();\n    mirrorCells[midX-1][midY+3].toggle();\n    mirrorCells[midX+1][midY-3].toggle();\n    mirrorCells[midX-1][midY-3].toggle();\n    this.draw();\n  }\n\n  stepBy1Gen = () => {\n    if (this.state.continueAnimation) {\n      return;\n    }\n    this.update();\n    this.draw();\n    this.nextgen();\n  }\n\n  clearGrid = () => {\n    const canv = this.refs.canvas;\n    const ctx = canv.getContext('2d');\n    for (let x = 0; x < this.width; x+=this.cellsize) {\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, this.height);\n    }\n\n    for (let y = 0; y<this.height; y+=this.cellsize) {\n      ctx.moveTo(0, y);\n      ctx.lineTo(this.width, y);\n    }\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n    let cells = this.state.cells;\n    cells.forEach(cellRow => {\n      cellRow.forEach(cell => {\n        cell.living = 0;\n      });\n    });\n    this.setState({ cells, generation: 0, continueAnimation: false });\n    this.draw()\n  }\n\n  randomize = () => {\n    let cells = this.state.cells;\n    cells.forEach(cellRow => {\n      cellRow.forEach(cell => {\n        const num = Math.round(Math.random());\n        cell.living = num;\n      });\n    });\n    this.setState({ cells, generation: 0, continueAnimation: false });\n    this.draw()\n  }\n\n  nextgen = () => {\n    this.setState(prevState => ({ generation: prevState.generation+1 }))\n  }\n\n  draw = () => {\n    const canv = this.refs.canvas;\n    const ctx = canv.getContext('2d');\n    const color = '#'+(Math.random()*0xFFFFFF<<0).toString(16);\n\n    for (let j=0; j<this.height/this.cellsize; j++) {\n      for (let k=0; k<this.width/this.cellsize; k++) {\n        if (this.state.cells[j][k].living == 1) {\n          ctx.fillStyle = color;\n          ctx.fillRect(j*this.cellsize, k*this.cellsize, this.cellsize-1, this.cellsize-1);\n        }\n        else {\n          ctx.fillStyle = 'lightgray';\n          ctx.fillRect(j*this.cellsize, k*this.cellsize, this.cellsize-1, this.cellsize-1);\n        }\n      }\n    }\n  }\n\n  update = () => {\n    const rows = this.height/this.cellsize;\n    const cols = this.width/this.cellsize;\n    const mirrorCells = new Array(rows).fill(0).map(row => new Array(cols).fill(0));\n\n    for (let x=0; x<rows; x++) {\n      for (let y=0; y<cols; y++) {\n        mirrorCells[x][y] = new Cell(0, x*this.width, y*this.height);\n      }\n    }\n\n    for (let j=0; j<this.height/this.cellsize; j++) {\n      for (let k=0; k<this.width/this.cellsize; k++) {\n        let liveneighbors = 0;\n        if (j > 0) {\n          if (k>0) {\n            liveneighbors += this.state.cells[j-1][k-1].living;\n          }\n\n          if (k<this.width/this.cellsize-1) {\n            liveneighbors += this.state.cells[j-1][k+1].living;\n          }\n\n          liveneighbors += this.state.cells[j-1][k].living;\n        }\n\n        if (k > 0) {\n\n          if (j<this.height/this.cellsize-1) {\n            liveneighbors += this.state.cells[j+1][k-1].living;\n          }\n          liveneighbors += this.state.cells[j][k-1].living;\n        }\n\n        if (j<this.height/this.cellsize-1) {\n          if (k<this.width/this.cellsize-1) {\n            liveneighbors += this.state.cells[j+1][k+1].living;\n          }\n          liveneighbors += this.state.cells[j+1][k].living;\n        }\n\n        if (k<this.width/this.cellsize-1) {\n          liveneighbors += this.state.cells[j][k+1].living;\n        }\n\n        if (this.state.cells[j][k].living == 0 && liveneighbors === 3) {\n              mirrorCells[j][k].toggle();\n        }\n        if (this.state.cells[j][k].living == 1) {\n          switch (liveneighbors) {\n            case 2:\n            case 3:\n              mirrorCells[j][k].toggle();\n              break;\n          }\n        }\n        // else {\n        //   console.log(\"Something went wrong in your update function!\")\n        // }\n      }\n    }\n    this.setState({ cells: mirrorCells });\n  }\n\n  animate = () => {\n    setTimeout(this.tick, this.state.interval)\n  }\n\n  tick = () => {\n    if (this.state.continueAnimation) {\n      this.draw();\n      this.update();\n      this.nextgen();\n      requestAnimationFrame(this.animate);\n    }\n  }\n\n  start = (e) => {\n    if (this.state.continueAnimation) {\n      return;\n    }\n    this.setState({ continueAnimation: true});\n    requestAnimationFrame(this.tick);\n  }\n\n  stop = (e) => {\n    this.setState({ continueAnimation: false});\n  }\n\n  clickListener = (e) => {\n    if (this.state.continueAnimation === true) {\n      return;\n    }\n    const canv = this.refs.canvas;\n    const ctx = canv.getContext('2d');\n    const lft = canv.offsetLeft;\n    const top = canv.offsetTop;\n    let cells = this.state.cells;\n    const x = e.pageX - lft;\n    const y = e.pageY - top;\n    const xindex = Math.floor(x/this.cellsize);\n    const yindex = Math.floor(y/this.cellsize);\n    console.log(xindex, yindex);\n    cells[xindex][yindex].toggle();\n    // this.draw()\n    ctx.fillStyle = cells[xindex][yindex].living ? 'white' : 'gray';\n    ctx.fillRect(xindex*this.cellsize, yindex*this.cellsize, this.cellsize-1, this.cellsize-1);\n    this.setState({ cells })\n  }\n\n  componentDidMount() {\n    const canv = this.refs.canvas;\n    const ctx = canv.getContext('2d');\n    for (let x = 0; x < this.width; x+=this.cellsize) {\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, this.height);\n    }\n\n    for (let y = 0; y<this.height; y+=this.cellsize) {\n      ctx.moveTo(0, y);\n      ctx.lineTo(this.width, y);\n    }\n    ctx.strokeStyle = 'black';\n    ctx.stroke();\n    this.draw();\n    requestAnimationFrame(this.tick);\n  }\n\n  render() {\n        return (\n          <div>\n            <h3>Jordan's Game of Life</h3>\n            <p>Generations: {this.state.generation}</p>\n            <canvas ref=\"canvas\" width={this.width} height={this.height} onClick = {this.clickListener} /> <br/>\n            <button onClick = {this.start}>Start</button>\n            <button onClick = {this.stop}>Stop</button>\n            <button onClick = {this.randomize}>Randomize</button>\n            <button onClick = {this.clearGrid}>Clear</button>\n            <button onClick = {this.stepBy1Gen}>Next Generation</button>\n            <button onClick = {this.sample1}>Sample 1</button>\n            <button onClick = {this.sample2}>Sample 2</button>\n            <button onClick = {this.sample3}>Sample 3</button><br/>\n            <Link to='/rules'><button>Rules of the Game</button></Link>\n            <Link to='/about'><button>About the Algorithm</button></Link>\n          </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Rules(props) {\n  return (\n    <div>\n      <h2>Rules for the Game of Life:</h2>\n      <h4>In the Game of Life, these rules examine each cell of the grid.\n      For each cell, it counts that cell's eight neighbors (up, down, left,\n        right, and diagonals), and then act on that result.</h4>\n      <ul>\n        <li>If the cell is alive and has 2 or 3 neighbors, then it remains alive. Else it dies.</li><br/>\n        <li>If the cell is dead and has exactly 3 neighbors, then it comes to life. Else if remains dead.</li>\n      </ul><br/>\n      <Link to='/gameoflife'><button>Go to the Game!</button></Link>\n      <Link to='/about'><button>About the Game</button></Link>\n    </div>\n  )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Welcome(props) {\n  return (\n    <div>\n      <h2>Welcome to Jordan's Game of Life</h2>\n      <Link to='/gameoflife'><button>Go to the Game!</button></Link>\n      <Link to='/rules'><button>Rules of the Game</button></Link>\n      <Link to='/about'><button>About the Game</button></Link>\n    </div>\n  )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function About(props) {\n  return (\n    <div>\n      <h3>About the Game of Life:</h3>\n      <p>\n      The Game of Life is a cellular automaton that requires no input once\n      the game has begun and outcome depends wholly on the starting state.\n      </p>\n      <p>\n      Cellular automata simulate living beings/organisms and reproduction. They\n      are also, by nature, <a href=\"https://en.wikipedia.org/wiki/Turing_completeness\">Turing complete</a>.\n      John Conway published his initial game in the October 1970 issue of Scientific American. when\n      Conway was first figuring the later development of certain configurations, he did so\n      completely by hand.\n      </p>\n      <p>\n      Cellular automata can be used to create musical and visual compositions, to generate\n      random numbers and sequences, and to study the development of life itself.\n      </p>\n      <Link to='/gameoflife'><button>Go to the Game!</button></Link>\n      <Link to='/rules'><button>Rules of the Game</button></Link>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport LifeCanvas from './components/LifeCanvas';\nimport Rules from './components/Rules';\nimport Welcome from './components/Welcome';\nimport About from './components/About';\n\n\nclass App extends Component {\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     generation: 0,\n  //   }\n  // }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Route exact path = '/' component={Welcome} />\n        <Route path = '/rules' component={Rules} />\n        <Route path = '/about' component={About} />\n        <Route path = '/gameoflife' component={LifeCanvas} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}